def f(pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2):
      -----------    ----------     ----------
        |             |                  |
        |        Positional or keyword   |
        |                                - Keyword only
         -- Positional only
Default argument values
    Default arguments represents the function arguments that will be used if no arguments are passed to the function call.
    The defeault argument_name = value in the functiondefination.
    Default arguments in python can be used with keyword and positional arguments.
keyword arguments
    Keyword arguments (or named arguments) are values that, when passedinto a function, are identifiable by specific parameter names.
    A keyword argument is preceded by a parameter and the assignment operator, = .
    Keyword arguments can be linked to dictionaries in that they map a value to a keyword.
Special parameters
    Python have the special forms of parameters in functions.
    These special forms of parameters are Args and Kwargs.
    Args is a special parameter through which any number of positive arguments packed into a tuple.
    Through Kwargs any number of Keyword Arguments packed into a dictionary.
        Positional-or-Keyword Arguments
            If / and * are not present in the function definition, arguments may be passed to a function by position or by keyword.
        Positional only parameters
        Positional or keyword arguments
        Keyword only arguments
Recap
    The use case will determine which parameters to use in the function definition:
    def f(pos1, pos2, /, pos_or_kwd, *, kwd1, kwd2):
    As guidance:
        Use positional-only if you want the name of the parameters to not be available to the user. This is useful when parameter names have no real meaning, if you want to enforce the order of the arguments when the function is called or if you need to take some positional parameters and arbitrary keywords.

        Use keyword-only when names have meaning and the function definition is more understandable by being explicit with names or you want to prevent users relying on the position of the argument being passed.

        For an API, use positional-only to prevent breaking API changes if the parameterâ€™s name is modified in the future.

Unppacking argument lists
        